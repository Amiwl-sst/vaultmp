/* OnClientAuthenticate
 * called when a client attempts to join the server
 * return 0: kick player
 */

/* OnClientRequestGame
 * called when a client attempts to start a game
 * set savegame string to the savegame name for the client to load (maxlength: len)
 * return 0: kick player
 */

/* OnPlayerJoin
 * called when a client is in-game (client is now a player)
 */

/* OnPlayerDeath
 * called when a player died
 */

/* OnPlayerDisconnect
 * called when a player leaves the game; note that you can't use any setter functions on the player anymore
 */

/* GetPlayerName
 * supply a buffer of at least 16 cells
 * returns 0: invalid clientID
 */

/* GetPlayerPos
 * returns a Float referring to the position value on the specified axis (X_AXIS = X, Y_AXIS = Y, Z_AXIS = Z)
 * returns 0: invalid clientID / invalid axis parameter
 */

/* GetPlayerZAngle
 * returns a Float referring to the Z angle
 * returns 0: invalid clientID
 */

/* GetPlayerHealth
 * returns a Float referring to the players health
 * returns 0: invalid clientID
 */

/* GetPlayerBaseHealth
 * returns a Float referring to the players base health
 * returns 0: invalid clientID
 */

/* GetPlayerCondition
 * returns a Float referring to the players condition of the specified function (see Constants for a list)
 * returns 0: invalid clientID / invalid condition parameter
 */

/* IsPlayerDead
 * returns 1 if the player is dead
 * returns 0 if the player is alive
 * returns -1: invalid clientID
 */

/* GetPlayerMoving
 * returns a moving state (see Constants for a list)
 * returns -1: invalid clientID
 */

/* IsPlayerAlerted
 * returns 1 if the player is alerted (has his weapon drawn)
 * returns 0 if the player is not alerted
 * returns -1: invalid clientID
 */

/* GetPlayerCell
 * returns the players current cell
 * returns -1: invalid clientID
 */

/* SetServerName
 * set the name of the server
 */

/* SetServerMap
 * set the map of the server
 */

/* SetServerRule
 * add a rule to the server (note: you can't remove or overwrite rules)
 */

/* IsNewVegas
 * returns 0: Fallout 3 server
 * returns 1: Fallout: New Vegas server
 */

/* timestamp
 * prints a vaultmp server timestamp in console
 */